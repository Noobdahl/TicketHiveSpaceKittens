@page "/home"
@using Microsoft.AspNetCore.Authorization;
@using TicketHiveSpaceKittens.Client.Services;
@using TicketHiveSpaceKittens.Shared.Models;
@attribute [Authorize]
@inject IEventService service
@inject NavigationManager navManager

<div class="container mt-5 shadow-lg">
    <div class="row">
        <div class="col-md-12">
                <BSCarousel>
                @if (events != null)
                {
                    @foreach (var e in events)
                    {
                        if (e.TicketsRemaining > 0)
                        {
                            <BSCarouselItem Active="item == events.First()">
                                <div class="row">

                                    <div class=" col-md-6">
                                        <div class="event-image mb-3 mt-3">
                                            <img class=" img-fluid " src="/Images/Event images/@e.ImageUrl" alt="eventImg">
                                        </div>
                                    </div>

                                    <div class="col-md-6 p-5">
                                        <h3 class="fw-bolder">@e.Name</h3>
                                        <hr>
                                        <p>@e.Description</p>
                                        <p><strong>Date:</strong> @e.EventDate</p>

                                        <a href="details/@e.EventId" class="btn btn-lg btn-warning w-100 fs-6 fw-bolder">See more info</a>

                                    </div>
                                </div>

                            </BSCarouselItem>
                        }
                    }
                }
            </BSCarousel>
        </div>
    </div>
</div>

<div class="row mt-5">
    <div class=" form-group mt-5 text-center">
        <h1 class="fw-bolder">Search your favorit event</h1>
            <input class="form-control-sm fw-bolder" @bind-value="@searchText" type="text" placeholder="Search for event..." />
            <button class="btn btn-sm btn-primary" @onclick="@(() => GoToSearch())">Search</button>
    </div>
        @if (events != null)
        {
            foreach (var e in events)
            {
                if(e.TicketsRemaining > 0)
                {
                        <div class="col-md-3 mt-5">
                            <div class="card border-1 m-2 mb-2">
                                <div class="card-header text-center">
                                    <a href="details/@e.EventId">
                                        <img class="card-img-top" src="/Images/Event images/@e.ImageUrl" style="width:200px; height:150px" />
                                    </a>
                                </div>
                                <div class="card-body">
                                    <h5 class="card-title"><strong>@e.Name:</strong></h5><br>
                                    <span class="card-text"><strong>Location:</strong> @e.Location</span><br>
                                    <span class="card-text"><strong>Events date:</strong> @e.EventDate</span><br>
                                </div>
                            </div>
                        </div>
                }
            }
        }
</div>


@code
{
    private string? searchText;
    private List<EventModel>? events;

    //private string? statusMessage;
    //public List<string>? searchResult { get; set; }

    //private List<EventModel> SortedEvents => SortEvent(events);

    //private List<EventModel> SortEvent(List<EventModel> events, bool ascending = true)
    //{
    //    if (ascending)
    //    {
    //        return events.OrderBy(e => e.EventDate).ToList();
    //    }
    //    else
    //    {
    //        return events.OrderByDescending(e => e.TicketPrice).ToList();
    //    }
    //}

    protected override async Task OnInitializedAsync()
    {
        await GetEvents();
    }

    private async Task GetEvents()
    {
        events = await service.GetEventsAsync();
    }

    private void GoToSearch()
    {
        navManager.NavigateTo($"/booking/{searchText}");
    }
}