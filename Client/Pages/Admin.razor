@page "/admin"
@using Microsoft.AspNetCore.Authorization;
@using TicketHiveSpaceKittens.Client.Services;
@using TicketHiveSpaceKittens.Shared.Models;
@attribute [Authorize(Roles = "Admin")]
@inject IEventService service
@inject NavigationManager navManager
@inject IModalService modal

<style>
    .table-title {
        background: #fbe89c;
        color: #305076;
        padding: 15px 30px;
        border-radius: 3px 3px 0 0;
    }
</style>


<div class="container-xl shadow">
    <div class="table-responsive">
        <div class="table-wrapper">
    <!-----------------------------------------------Table Header--------------------------------------------------->
            <div class="table-title mt-5 shadow" >
                <div class="row mt-5 ">
                    <div class="col-sm-6">
                        <h2><b>Manage Events</b></h2>
                    </div>
                    <a @onclick="@(()=>modal.Show<AddEvents>())" class="btn btn-warning .btn-lg btn.block fs-6 "><strong>Add Events</strong></a> 
                </div>
            </div>

    <!-----------------------------------------------Table body--------------------------------------------------->
            <table class="table table-striped table-hover mt-5">
                <thead>
                    <tr>

                        <th>Nr:</th>
                        <th>Name:</th>
                        <th>Description:</th>
                        <th>Location:</th>
                        <th>Date:</th>
                        <th>Price:</th>
                        <th>Image:</th>

                    </tr>
                </thead>


                <tbody>
                    @if (allEvents != null)
                    {
                        var count = 1;
                        foreach (var e in allEvents)
                        {
                           
                                <tr>
                                    <td>@(count++)</td>
                                    <td>@e.Name</td>
                                    <td>@e.Description</td>
                                    <td>@e.Location</td>
                                    <td>@e.EventDate</td>
                                    <td>@e.TicketPrice</td>
                                    <td>
                                        <a href="details/@e.EventId">
                                            <img class="card-img-top" src="/Images/Event images/@e.ImageUrl" style="width:80px; height:80px" />
                                        </a>
                                    </td>
                                    <td>
                                       <ConfirmationDialog Title="Delete Event"
                                       Class="btn btn-psl-add mt-2"
                                       Message="Delete this event?"
                                       YesCssClass="btn-yes btn-success"
                                       NoCssClass="btn-no btn-danger"
                                       ConfirmedChanged="@(async (bool confirmed) => await DeleteEvent(e.EventId, confirmed))">
                                        <ButtonContent>
                                            <button type="submit" class="btn btn-lg btn-danger w-100 fs-6 fw-bolder">
                                                <ion-icon name="trash-outline" style="color:white;"></ion-icon> Delete
                                            </button>
                                        </ButtonContent>
                                        <MessageTemplate>
                                            <div class="card border-primary pop-message-card">
                                                <div class="card-header bg-primary text-white">Delete Event?</div>
                                                <div class="card-body">
                                                    <p>
                                                        This will delete the event!<br />
                                                        Are you sure?
                                                    </p>
                                                </div>
                                            </div>
                                        </MessageTemplate>
                                    </ConfirmationDialog>
                                    </td>
                                </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code
{
    private List<EventModel>? allEvents = new();
    private ConfirmationDialog? deleteConfirmation;

    protected override async Task OnInitializedAsync()
    {
        await GetEvents();
    }

    private async Task GetEvents()
    {
        allEvents = await service.GetEventsAsync();
    }

    private async Task DeleteEvent(int eventId, bool isConfirmed)
    {
        if (isConfirmed)
        {
            await service.DeleteEventByIdAsync(eventId);
            await GetEvents();
        }
    }

}
